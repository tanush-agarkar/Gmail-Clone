{"version":3,"file":"static/js/736.9627545f.chunk.js","mappings":"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","sources":["constants/constant.js","services/api.js","hooks/useApi.jsx","components/Header.jsx","config/sidebar.config.js","components/ComposeMail.jsx","components/SideBarContent.jsx","components/SideBar.jsx","pages/Main.jsx","services/api.urls.js"],"sourcesContent":["export const gmailLogo =\r\n  \"https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_1x_r5.png\";\r\nexport const emptyInbox =\r\n  \"https://miro.medium.com/max/1088/1*DhOnyEHovQZ31rH00-VUDw.png\";\r\nexport const emptyProfilePic =\r\n  \"https://ssl.gstatic.com/ui/v1/icons/mail/profile_mask2.png\";\r\n\r\nexport const VIEWS = {\r\n  inbox: \"inbox\",\r\n  starred: \"starred\",\r\n  sent: \"sent\",\r\n  drafts: \"drafts\",\r\n};\r\n\r\nexport const EMPTY_TABS = {\r\n  inbox: {\r\n    heading: \"Your inbox is empty\",\r\n    subHeading: \"Mails that don't appear in other tabs will be shown here.\",\r\n  },\r\n  drafts: {\r\n    heading: \"You don't have any saved drafts.\",\r\n    subHeading:\r\n      \"Saving a draft allows you to keep a message you aren't ready to send yet.\",\r\n  },\r\n  starred: {\r\n    heading: \"No starred messages\",\r\n    subHeading:\r\n      \"Stars let you give messages a special status to make them easier to find. To star a message, click on the star outline beside any message or conversation.\",\r\n  },\r\n  sent: {\r\n    heading: \"No sent messages!\",\r\n    subHeading: \"Send one now!\",\r\n  },\r\n  bin: {\r\n    heading: \"No conversations in Bin.\",\r\n    subHeading: \"\",\r\n  },\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = \"\";\r\nconst API_GMAIL = async (urlObject, payload, type) => {\r\n  return await axios({\r\n    method: urlObject.method,\r\n    url: `${API_URL}/${urlObject.endpoint}/${type}`,\r\n    data: payload,\r\n  });\r\n};\r\n\r\nexport default API_GMAIL;\r\n","import { useState } from \"react\";\r\nimport API from \"../services/api\";\r\n\r\nconst useApi = (urlObject) => {\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const call = async (payload,type=\"\") => {\r\n    setResponse(null);\r\n    setError(\"\");\r\n    setIsLoading(true);\r\n    try {\r\n      let res = await API(urlObject,payload,type);\r\n      setResponse(res.data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return { call, response, error, isLoading };\r\n};\r\n\r\nexport default useApi;\r\n","import { AppBar, Toolbar, styled, InputBase, Box } from \"@mui/material\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  Search,\r\n  Tune,\r\n  HelpOutlineOutlined,\r\n  SettingsOutlined,\r\n  AppsOutlined,\r\n  AccountCircleOutlined,\r\n} from \"@mui/icons-material\";\r\nimport { gmailLogo } from \"../constants/constant\";\r\n\r\nconst StyledAppBar = styled(AppBar)({\r\n  background: \"#F5F5F5\",\r\n  boxShadow: \"none\",\r\n});\r\n\r\nconst SearchWrapper = styled(Box)({\r\n  background: \"#EAF1FB\",\r\n  marginLeft: 80,\r\n  borderRadius: 8,\r\n  minWidth: 690,\r\n  maxWidth: 720,\r\n  height: 48,\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"space-between\",\r\n  padding: \"0 20px\",\r\n  \"& > div\": {\r\n    width: \"100%\",\r\n    padding: \"0 10px\",\r\n  },\r\n});\r\n\r\nconst OptionWrapper = styled(Box)({\r\n  width: \"100%\",\r\n  display: 'flex',\r\n  justifyContent: 'end',\r\n  \"& > svg\":{\r\n    marginLeft: 20\r\n  }\r\n});\r\nconst Header = ({toggleDrawer}) => {\r\n  return (\r\n    <StyledAppBar position=\"static\">\r\n      <Toolbar>\r\n        <MenuIcon color=\"action\" onClick={toggleDrawer}/>\r\n        <img src={gmailLogo} alt=\"\" style={{ width: 110, marginLeft: 15 }} />\r\n\r\n        <SearchWrapper>\r\n          <Search color=\"action\" />\r\n          <InputBase placeholder=\"Search Mail\" />\r\n          <Tune color=\"action\" />\r\n        </SearchWrapper>\r\n\r\n        <OptionWrapper>\r\n          <HelpOutlineOutlined color=\"action\" />\r\n          <SettingsOutlined color=\"action\" />\r\n          <AppsOutlined color=\"action\" />\r\n          <AccountCircleOutlined color=\"action\" />\r\n        </OptionWrapper>\r\n\r\n      </Toolbar>\r\n    </StyledAppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","\r\n\r\nimport { routes } from \"../routes/routes\"\r\nimport { Photo, StarOutline, SendOutlined, InsertDriveFileOutlined, DeleteOutlined,\r\n    MailOutlined } from '@mui/icons-material';\r\n\r\nexport const SIDEBAR_DATA = [\r\n    {\r\n        name: 'inbox',\r\n        title: 'Inbox',\r\n        icon: Photo,\r\n        // path: routes.emails.path\r\n    },\r\n    {\r\n        name: 'starred',\r\n        title: 'Starred',\r\n        icon: StarOutline,\r\n        // path: routes.emails.path\r\n    },\r\n    {\r\n        name: 'sent',\r\n        title: 'Sent',\r\n        icon: SendOutlined,\r\n        // path: routes.emails.path\r\n    },\r\n    {\r\n        name: 'drafts',\r\n        title: 'Drafts',\r\n        icon: InsertDriveFileOutlined,\r\n        path: routes.emails.path\r\n    },\r\n    {\r\n        name: 'bin',\r\n        title: 'Bin',\r\n        icon: DeleteOutlined,\r\n        // path: routes.emails.path\r\n    },\r\n    {\r\n        name: 'allmail',\r\n        title: 'All Mail',\r\n        icon: MailOutlined,\r\n        // path: routes.emails.path\r\n    }\r\n];","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  InputBase,\r\n  TextField,\r\n  Typography,\r\n  styled,\r\n} from \"@mui/material\";\r\nimport { BorderBottom, Close, DeleteOutline } from \"@mui/icons-material\";\r\nimport useApi from \"../hooks/useApi\";\r\nimport { API_URLS } from \"../services/api.urls\";\r\n\r\nconst dialogStyle = {\r\n  height: \"90%\",\r\n  width: \"80%\",\r\n  maxWidth: \"100%\",\r\n  maxHeight: \"100%\",\r\n  boxShadow: \"none\",\r\n  borderRadius: \"10px 10px 0 0\",\r\n};\r\n\r\nconst Header = styled(Box)({\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  padding: \"10px 15px\",\r\n  background: \"#f2f6fc\",\r\n  \"& > p\": {\r\n    fontSize: 14,\r\n    fontWeight: 500,\r\n  },\r\n});\r\n\r\nconst RecipientWrapper = styled(Box)({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  padding: \"0 15px\",\r\n  \"& > div\": {\r\n    fontSize: \"14px\",\r\n    BorderBottom: \"1px solid #F5F5F5\",\r\n  },\r\n});\r\n\r\nconst Footer = styled(Box)({\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  padding: \"10px 15px\",\r\n  // textAlign:'center'\r\n});\r\n\r\nconst SendButton = styled(Button)({\r\n  background: \"#0B57D0\",\r\n  color: \"#ffff\",\r\n  fontWeight: 500,\r\n  textTransform: \"none\",\r\n  borderRadius: 18,\r\n  width: 100,\r\n});\r\nconst ComposeMail = ({ openDialog, setOpenDialog }) => {\r\n  const [data, setData] = useState({});\r\n  const sentEmailService = useApi(API_URLS.saveSentEmail);\r\n  const saveDraftService = useApi(API_URLS.saveDraftEmails)\r\n\r\n  const config = {\r\n    Host: \"smtp.elasticemail.com\",\r\n    Username: process.env.REACT_APP_USERNAME,\r\n    Password: process.env.REACT_APP_PASSWORD,\r\n    Port: 2525,\r\n  };\r\n\r\n  const closeComposeMail = (e) => {\r\n    e.preventDefault();\r\n\r\n    const payload = {\r\n      to: data.to,\r\n      from: \"tanushagarkar684@gmail.com\",\r\n      subject: data.subject,\r\n      body: data.body,\r\n      date: new Date(),\r\n      image: \"\",\r\n      name: \"Tanush\",\r\n      starred: false,\r\n      type: \"drafts\",\r\n    };\r\n\r\n    saveDraftService.call(payload);\r\n\r\n    if (!saveDraftService.error) {\r\n      setOpenDialog(false);\r\n      setData({});\r\n    }\r\n\r\n  };\r\n\r\n  const sendMail = (e) => {\r\n    e.preventDefault();\r\n    if (window.Email) {\r\n      window.Email.send({\r\n        ...config,\r\n        To: data.to,\r\n        From: \"tanushagarkar684@gmail.com\",\r\n        Subject: data.subject,\r\n        Body: data.body,\r\n      }).then((message) => alert(message));\r\n    }\r\n\r\n    const payload = {\r\n      to: data.to,\r\n      from: \"tanushagarkar684@gmail.com\",\r\n      subject: data.subject,\r\n      body: data.body,\r\n      date: new Date(),\r\n      image: \"\",\r\n      name: \"Tanush\",\r\n      starred: false,\r\n      type: \"sent\",\r\n    };\r\n\r\n    sentEmailService.call(payload);\r\n\r\n    if (!sentEmailService.error) {\r\n      setOpenDialog(false);\r\n      setData({});\r\n    }\r\n\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const onValueChage = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={openDialog}\r\n      PaperProps={{\r\n        sx: dialogStyle,\r\n      }}\r\n    >\r\n      <Header>\r\n        <Typography>New Message</Typography>\r\n        <Close fontSize=\"sm\" onClick={(e) => closeComposeMail(e)} />\r\n      </Header>\r\n      <RecipientWrapper>\r\n        <InputBase\r\n          placeholder=\"Recipients\"\r\n          name=\"to\"\r\n          onChange={(e) => onValueChage(e)}\r\n        />\r\n        <InputBase\r\n          placeholder=\"Subject\"\r\n          name=\"subject\"\r\n          onChange={(e) => onValueChage(e)}\r\n        />\r\n      </RecipientWrapper>\r\n\r\n      <TextField\r\n        multiline\r\n        rows={20}\r\n        sx={{ \"& .MuiOutlinedInput-notchedOutline\": { border: \"none\" } }}\r\n        name=\"body\"\r\n        onChange={(e) => onValueChage(e)}\r\n        value={data.body}\r\n      />\r\n\r\n      <Footer>\r\n        <SendButton onClick={(e) => sendMail(e)}>Send</SendButton>\r\n        <DeleteOutline onClick={() => setOpenDialog(false)} />\r\n      </Footer>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ComposeMail;\r\n","import { Box, Button, styled, List, ListItem } from \"@mui/material\";\r\nimport { CreateOutlined } from \"@mui/icons-material\";\r\nimport { SIDEBAR_DATA } from \"../config/sidebar.config\";\r\nimport ComposeMail from \"./ComposeMail\";\r\nimport { useState } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport { routes } from \"../routes/routes\";\r\n\r\nconst ComposeButton = styled(Button)({\r\n  background: \"#c2e7ff\",\r\n  color: \"#001d35\",\r\n  padding: 15,\r\n  borderRadius: 16,\r\n  minWidth: 140,\r\n  textTransform: \"none\",\r\n});\r\n\r\nconst Container = styled(Box)({\r\n  padding: 8,\r\n  \"& > ul\": {\r\n    padding: \"10px 0 0 3px\",\r\n    fontSize: 14,\r\n    fontWeight: 500,\r\n    cursor: \"pointer\",\r\n    \"& >a\": {\r\n      textDecoration: \"none\",\r\n      color: \"inherit\",\r\n    },\r\n  },\r\n  \"& > ul > a > li > svg\": {\r\n    marginRight: 20,\r\n  },\r\n});\r\nconst SideBarContent = () => {\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const { type } = useParams();\r\n\r\n  const onComposeClick = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <ComposeButton onClick={() => onComposeClick()}>\r\n        <CreateOutlined /> Compose\r\n      </ComposeButton>\r\n      <List>\r\n        {SIDEBAR_DATA.map((data) => (\r\n          <NavLink key={data.name} to={`${routes.emails.path}/${data.name}`}>\r\n            <ListItem\r\n              style={\r\n                type === data.name.toLowerCase()\r\n                  ? {\r\n                      backgroundColor: \"#d3e3fd\",\r\n                      borderRadius: \"0 16px 16px 0\",\r\n                    }\r\n                  : {}\r\n              }\r\n            >\r\n              <data.icon fontSize=\"sm\" /> {data.title}\r\n            </ListItem>\r\n          </NavLink>\r\n        ))}\r\n      </List>\r\n      <ComposeMail openDialog={openDialog} setOpenDialog={setOpenDialog} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SideBarContent;\r\n","import { Drawer, styled } from \"@mui/material\";\r\nimport SideBarContent from \"./SideBarContent\";\r\n\r\nconst SideBar = ({ openDrawer }) => {\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      open={openDrawer}\r\n      hideBackdrop={true}\r\n      ModalProps={{ keepMounted: true }}\r\n      variant=\"persistent\"\r\n      sx={{\r\n        \"& .MuiDrawer-paper\": {\r\n          marginTop: \"64px\",\r\n          width: 250,\r\n          background: \"#F5F5F5\",\r\n          borderRight: \"none\",\r\n          height: \"calc(100vh - 64px)\",\r\n        },\r\n      }}\r\n    >\r\n      <SideBarContent />\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import { Suspense, useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport SideBar from \"../components/SideBar\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport SuspenseLoader from \"../components/common/SuspenseLoader\";\r\n\r\n\r\nconst Main = () => {\r\n  const [openDrawer, setOpenDrawer] = useState(true);\r\n\r\n  const toggleDrawer = () => {\r\n    setOpenDrawer((prevState) => !prevState);\r\n  };\r\n  return (\r\n    <>\r\n      <Header toggleDrawer={toggleDrawer} />\r\n      <SideBar openDrawer={openDrawer} />\r\n      <Suspense fallback={<SuspenseLoader/>}>\r\n        <Outlet context={{openDrawer}}/>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","export const API_URLS = {\r\n  saveSentEmail: {\r\n    endpoint: \"save\",\r\n    method: \"POST\",\r\n  },\r\n  saveDraftEmails: {\r\n    endpoint: \"save-draft\",\r\n    method: \"POST\",\r\n  },\r\n  getEmailFromType: {\r\n    endpoint: \"emails\",\r\n    method: \"GET\",\r\n  },\r\n  toggleStarredMails: {\r\n    endpoint: \"starred\",\r\n    method: \"POST\",\r\n  },\r\n  deleteEmails: {\r\n    endpoint: \"delete\",\r\n    method: \"DELETE\",\r\n  },\r\n  moveEmailsToBin: {\r\n    endpoint: \"bin\",\r\n    method: \"POST\",\r\n  },\r\n};\r\n"],"names":["gmailLogo","emptyProfilePic","EMPTY_TABS","inbox","heading","subHeading","drafts","starred","sent","bin","async","urlObject","payload","type","axios","method","url","concat","endpoint","data","response","setResponse","useState","error","setError","isLoading","setIsLoading","call","arguments","length","undefined","res","API","message","StyledAppBar","styled","AppBar","background","boxShadow","SearchWrapper","Box","marginLeft","borderRadius","minWidth","maxWidth","height","display","alignItems","justifyContent","padding","width","OptionWrapper","_ref","toggleDrawer","_jsx","position","children","_jsxs","Toolbar","MenuIcon","color","onClick","src","alt","style","Search","InputBase","placeholder","Tune","HelpOutlineOutlined","SettingsOutlined","AppsOutlined","AccountCircleOutlined","SIDEBAR_DATA","name","title","icon","Photo","StarOutline","SendOutlined","InsertDriveFileOutlined","path","routes","emails","DeleteOutlined","MailOutlined","dialogStyle","maxHeight","Header","fontSize","fontWeight","RecipientWrapper","flexDirection","BorderBottom","Footer","SendButton","Button","textTransform","openDialog","setOpenDialog","setData","sentEmailService","useApi","API_URLS","saveSentEmail","saveDraftService","saveDraftEmails","config","Host","Username","process","Password","Port","onValueChage","e","target","value","console","log","Dialog","open","PaperProps","sx","Typography","Close","preventDefault","to","from","subject","body","date","Date","image","closeComposeMail","onChange","TextField","multiline","rows","border","window","Email","send","To","From","Subject","Body","then","alert","sendMail","DeleteOutline","ComposeButton","Container","cursor","textDecoration","marginRight","SideBarContent","useParams","CreateOutlined","List","map","NavLink","ListItem","toLowerCase","backgroundColor","ComposeMail","openDrawer","Drawer","anchor","hideBackdrop","ModalProps","keepMounted","variant","marginTop","borderRight","Main","setOpenDrawer","_Fragment","prevState","SideBar","Suspense","fallback","SuspenseLoader","Outlet","context","getEmailFromType","toggleStarredMails","deleteEmails","moveEmailsToBin"],"sourceRoot":""}